//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MasteridiEntities : DbContext
    {
        public MasteridiEntities()
            : base("name=MasteridiEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Emisor> Emisor { get; set; }
    
        public virtual int EmisorDelete(Nullable<int> idEmisor)
        {
            var idEmisorParameter = idEmisor.HasValue ?
                new ObjectParameter("IdEmisor", idEmisor) :
                new ObjectParameter("IdEmisor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmisorDelete", idEmisorParameter);
        }
    
        public virtual ObjectResult<EmisorGetAll_Result> EmisorGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmisorGetAll_Result>("EmisorGetAll");
        }
    
        public virtual ObjectResult<EmisorGetById_Result> EmisorGetById(Nullable<int> idEmisor)
        {
            var idEmisorParameter = idEmisor.HasValue ?
                new ObjectParameter("IdEmisor", idEmisor) :
                new ObjectParameter("IdEmisor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmisorGetById_Result>("EmisorGetById", idEmisorParameter);
        }
    
        public virtual int EmisorUpdate(Nullable<int> idEmisor, string rFC, Nullable<System.DateTime> fechaInicioOperacion, Nullable<decimal> capital)
        {
            var idEmisorParameter = idEmisor.HasValue ?
                new ObjectParameter("IdEmisor", idEmisor) :
                new ObjectParameter("IdEmisor", typeof(int));
    
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            var fechaInicioOperacionParameter = fechaInicioOperacion.HasValue ?
                new ObjectParameter("FechaInicioOperacion", fechaInicioOperacion) :
                new ObjectParameter("FechaInicioOperacion", typeof(System.DateTime));
    
            var capitalParameter = capital.HasValue ?
                new ObjectParameter("Capital", capital) :
                new ObjectParameter("Capital", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmisorUpdate", idEmisorParameter, rFCParameter, fechaInicioOperacionParameter, capitalParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> EmisorAdd(string rFC, Nullable<System.DateTime> fechaInicioOperacion, Nullable<decimal> capital)
        {
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            var fechaInicioOperacionParameter = fechaInicioOperacion.HasValue ?
                new ObjectParameter("FechaInicioOperacion", fechaInicioOperacion) :
                new ObjectParameter("FechaInicioOperacion", typeof(System.DateTime));
    
            var capitalParameter = capital.HasValue ?
                new ObjectParameter("Capital", capital) :
                new ObjectParameter("Capital", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EmisorAdd", rFCParameter, fechaInicioOperacionParameter, capitalParameter);
        }
    }
}
